{"ast":null,"code":"var _jsxFileName = \"/media/swiss/Data/frontend/dilo-teddy/modul3/kuisAPISentryThunkMaterialUI/src/components/add.js\";\nimport React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'; // , FormControl, InputLabel, Select, MenuItem\n\nimport { connect } from 'react-redux'; // import { changeHandler, simpanPost } from \"../store/actions/action\"\n//tambahan code untuk redux thunk /middleware\n\nimport { changeHandler, simpanPost, fetchUsers } from '../store/actions/action';\nconst styles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  TextField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 250\n  },\n  select: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 250\n  }\n}));\n\nclass AddPost extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         items: [],\n  //         title: '',\n  //         body: '',\n  //         userid: 0,\n  //         users: []\n  //     };\n  // }\n  // changeHandler = (event) => {\n  //     this.setState({ [event.target.name]: event.target.value })\n  // }\n  // simpanPost = () => {\n  //     fetch(`https://jsonplaceholder.typicode.com/posts`, {\n  //         method: 'POST',\n  //         body: JSON.stringify({\n  //             title: this.state.title,\n  //             body: this.state.body,\n  //             userId: this.state.userid\n  //         }),\n  //         headers: {\n  //             \"Content-type\": \"application/json; charset=UTF-8\"\n  //         }\n  //     })\n  //         .then(response => response.json())\n  //         .then(json => console.log(json))\n  // }\n  componentDidMount() {\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             this.setState({\n    //                 users: result\n    //             });\n    //         },\n    //         (error) => {\n    //             console.log(error)\n    //         }\n    //     )\n    //tambahan code untuk redux thunk /middleware\n    const fetchUsers = this.props.fetchUsers;\n    fetchUsers();\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          body = _this$props.body,\n          userid = _this$props.userid,\n          users = _this$props.users,\n          changeHandler = _this$props.changeHandler,\n          simpanPost = _this$props.simpanPost;\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"title\",\n      label: \"Masukan Gaji\",\n      name: \"title\",\n      className: classes.TextField,\n      margin: \"normal\",\n      value: title // onChange={this.changeHandler}\n      ,\n      onChange: event => {\n        changeHandler(event.target.name, event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"body\",\n      label: \"Masukan Umur\",\n      name: \"body\",\n      className: classes.TextField,\n      margin: \"normal\" // onChange={this.changeHandler}\n      ,\n      value: body,\n      onChange: event => {\n        changeHandler(event.target.name, event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.select,\n      style: {\n        minWidth: 120,\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Pilih User\"), React.createElement(Select, {\n      labelId: \"label\",\n      id: \"select\",\n      name: \"userid\",\n      value: userid // onChange={this.changeHandler}\n      ,\n      onChange: event => {\n        changeHandler(event.target.name, event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, users.map((item, i) => React.createElement(MenuItem, {\n      key: i,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, item.name))))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: simpanPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  body: state.body,\n  //tambahan code untuk redux thunk /middleware\n  users: state.users,\n  userid: state.userid\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeHandler: (name, value) => dispatch(changeHandler(name, value)),\n  simpanPost: () => dispatch(simpanPost()),\n  //tambahan code untuk redux thunk /middleware\n  fetchUsers: () => dispatch(fetchUsers())\n}); // export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n//   )(withStyles(styles)(AddPost));\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(AddPost));","map":{"version":3,"sources":["/media/swiss/Data/frontend/dilo-teddy/modul3/kuisAPISentryThunkMaterialUI/src/components/add.js"],"names":["React","Component","TextField","withStyles","makeStyles","Grid","Container","Button","FormControl","InputLabel","Select","MenuItem","connect","changeHandler","simpanPost","fetchUsers","styles","theme","container","display","flexWrap","marginLeft","spacing","marginRight","minWidth","select","AddPost","componentDidMount","props","render","title","body","userid","users","classes","event","target","name","value","marginBottom","map","item","i","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n// , FormControl, InputLabel, Select, MenuItem\nimport { connect } from 'react-redux';\n// import { changeHandler, simpanPost } from \"../store/actions/action\"\n\n//tambahan code untuk redux thunk /middleware\nimport { changeHandler, simpanPost, fetchUsers } from '../store/actions/action'\n\nconst styles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    TextField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 250,\n    },\n    select: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 250,\n    }\n}));\n\nclass AddPost extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         items: [],\n    //         title: '',\n    //         body: '',\n    //         userid: 0,\n    //         users: []\n    //     };\n    // }\n\n    // changeHandler = (event) => {\n    //     this.setState({ [event.target.name]: event.target.value })\n    // }\n\n    // simpanPost = () => {\n    //     fetch(`https://jsonplaceholder.typicode.com/posts`, {\n    //         method: 'POST',\n    //         body: JSON.stringify({\n    //             title: this.state.title,\n    //             body: this.state.body,\n    //             userId: this.state.userid\n    //         }),\n    //         headers: {\n    //             \"Content-type\": \"application/json; charset=UTF-8\"\n    //         }\n    //     })\n    //         .then(response => response.json())\n    //         .then(json => console.log(json))\n    // }\n\n    componentDidMount() {\n        // fetch(\"https://jsonplaceholder.typicode.com/users\")\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) => {\n        //             this.setState({\n        //                 users: result\n        //             });\n        //         },\n        //         (error) => {\n        //             console.log(error)\n        //         }\n        //     )\n\n        //tambahan code untuk redux thunk /middleware\n        const { fetchUsers } = this.props\n        fetchUsers()\n    }\n\n\n    render() {\n        const {\n            // items,\n            title,\n            body,\n            userid,\n            users,\n            changeHandler,\n            simpanPost\n        } = this.props;\n        const { classes } = this.props;\n        return (\n            <Container fixed>\n                <Grid container spacing={3}>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <div>\n                            <TextField\n                                required\n                                id=\"title\"\n                                label=\"Masukan Gaji\"\n                                name=\"title\"\n                                className={classes.TextField}\n                                margin=\"normal\"\n                                value={title}\n                                // onChange={this.changeHandler}\n                                onChange={event => { changeHandler(event.target.name, event.target.value); }}\n                            />\n                        </div>\n\n                        <div>\n                            <TextField\n                                required\n                                id=\"body\"\n                                label=\"Masukan Umur\"\n                                name=\"body\"\n                                className={classes.TextField}\n                                margin=\"normal\"\n                                // onChange={this.changeHandler}\n                                value={body}\n                                onChange={event => {\n                                    changeHandler(event.target.name, event.target.value);\n                                }}\n                            />\n                        </div>\n\n                        <div>\n                            <FormControl className={classes.select} style={{ minWidth: 120, marginBottom: 10 }}>\n                                <InputLabel id=\"label\">Pilih User</InputLabel>\n                                <Select\n                                    labelId=\"label\"\n                                    id=\"select\"\n                                    name=\"userid\"\n                                    value={userid}\n\n                                    // onChange={this.changeHandler}\n                                    onChange={event => {\n                                        changeHandler(event.target.name, event.target.value);\n                                    }}\n                                >\n                                    {/* {this.state.users.map((item, i) => ( */}\n                                    {users.map((item, i) => (\n                                        <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <Button variant=\"contained\" color=\"primary\" onClick={simpanPost}>\n                            Submit\n                        </Button>\n\n                        {/* <Button variant=\"contained\" color=\"primary\" onClick={this.simpanPost}> */}\n\n                    </form>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    title: state.title,\n    body: state.body,\n\n    //tambahan code untuk redux thunk /middleware\n    users: state.users,\n    userid: state.userid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changeHandler: (name, value) => dispatch(changeHandler(name, value)),\n    simpanPost: () => dispatch(simpanPost()),\n\n    //tambahan code untuk redux thunk /middleware\n    fetchUsers: () => dispatch(fetchUsers())\n});\n\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n//   )(withStyles(styles)(AddPost));\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(AddPost));"]},"metadata":{},"sourceType":"module"}