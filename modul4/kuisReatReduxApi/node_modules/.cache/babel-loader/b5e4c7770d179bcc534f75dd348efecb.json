{"ast":null,"code":"import _defineProperty from \"/media/swiss/Data/frontend/dilo-teddy/modul4/kuisReatReduxApi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SimpanPost, ChangeHandler } from \"../actions/actionType\";\nconst initialState = {\n  items: [],\n  title: \"\",\n  body: \"\",\n  userid: 0,\n  users: []\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ChangeHandler:\n      const nama = action.name;\n      const isi = action.value;\n      return _objectSpread({}, state, {\n        [nama]: isi\n      });\n\n    case SimpanPost:\n      fetch(\"http://dummy.restapiexample.com/api/v1/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          employee_salary: state.title,\n          employee_age: state.body,\n          id: state.userid\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => console.log(json));\n      return _objectSpread({}, state, {\n        title: state.title,\n        body: state.body\n      });\n    //tambahan code untuk redux thunk /middleware\n\n    case \"UserData\":\n      const users = action.users;\n      return _objectSpread({}, state, {\n        users\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/media/swiss/Data/frontend/dilo-teddy/modul4/kuisReatReduxApi/src/store/reducers/reducer.js"],"names":["SimpanPost","ChangeHandler","initialState","items","title","body","userid","users","reducer","state","action","type","nama","name","isi","value","fetch","method","JSON","stringify","employee_salary","employee_age","id","headers","then","response","json","console","log"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,uBAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,MAAM,EAAE,CAJW;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGP,YAAzB,EAAuCQ,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,YAAMW,IAAI,GAAGF,MAAM,CAACG,IAApB;AACA,YAAMC,GAAG,GAAGJ,MAAM,CAACK,KAAnB;AACA,+BAAYN,KAAZ;AAAmB,SAACG,IAAD,GAAQE;AAA3B;;AACF,SAAKd,UAAL;AACEgB,MAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDC,QAAAA,MAAM,EAAE,MAD6C;AAErDZ,QAAAA,IAAI,EAAEa,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,eAAe,EAAEX,KAAK,CAACL,KADJ;AAEnBiB,UAAAA,YAAY,EAAEZ,KAAK,CAACJ,IAFD;AAGnBiB,UAAAA,EAAE,EAAEb,KAAK,CAACH;AAHS,SAAf,CAF+C;AAOrDiB,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAP4C,OAAlD,CAAL,CAWGC,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXpB,EAYGF,IAZH,CAYQE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAZhB;AAaA,+BAAYjB,KAAZ;AAAmBL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAhC;AAAuCC,QAAAA,IAAI,EAAEI,KAAK,CAACJ;AAAnD;AAEF;;AACA,SAAK,UAAL;AACE,YAAME,KAAK,GAAGG,MAAM,CAACH,KAArB;AACA,+BAAYE,KAAZ;AAAmBF,QAAAA;AAAnB;;AAEF;AACE,aAAOE,KAAP;AA3BJ;AA+BD;;AAED,eAAeD,OAAf","sourcesContent":["import { SimpanPost, ChangeHandler } from \"../actions/actionType\";\n\nconst initialState = {\n  items: [],\n  title: \"\",\n  body: \"\",\n  userid: 0,\n  users: []\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ChangeHandler:\n      const nama = action.name;\n      const isi = action.value;\n      return { ...state, [nama]: isi };\n    case SimpanPost:\n      fetch(\"http://dummy.restapiexample.com/api/v1/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          employee_salary: state.title,\n          employee_age: state.body,\n          id: state.userid\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      })\n        .then(response => response.json())\n        .then(json => console.log(json));\n      return { ...state, title: state.title, body: state.body };\n\n    //tambahan code untuk redux thunk /middleware\n    case \"UserData\":\n      const users = action.users;\n      return { ...state, users };\n\n    default:\n      return state;\n  }\n\n\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}