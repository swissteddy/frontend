{"ast":null,"code":"var _jsxFileName = \"/media/swiss/Data/frontend/dilo-teddy/modul1/reactjs/restfullapimaterial/src/components/edit.js\";\n// import React,{Component} from 'react';\n// import {TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core/';\n// const styles = makeStyles(theme => ({\n//   container: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 500,\n//   },\n// }));\n// class edit extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: [],\n//       title:'',\n//       body:'',\n//       userid:0,\n//       users:[],\n//       id:this.props.location.id,\n//     };\n//   }\n//   changeHandler = (event) => {\n//     this.setState({[event.target.name]:event.target.value})\n//   }\n//   editPost = () => {\n//     fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n//       method: 'PUT',\n//       body: JSON.stringify({\n//         title: this.state.title,\n//         body: this.state.body,\n//         userId: this.state.userid\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\"\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(json => console.log(json))\n//   }\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           this.setState({\n//             users: result,\n//             title:result.title,\n//             body:result.body,\n//             userid:result.userId,\n//           });\n//         },\n//         (error) => {\n//           console.log(error)\n//         }\n//       )\n//     fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`)\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           this.setState({\n//             items: result,\n//             title:result.title,\n//             body:result.body,\n//             userid:result.userId,\n//           });\n//         },                \n//         (error) => {\n//           console.log(error)   \n//         }\n//       )\n//   }\n//     render() {\n//       const {classes} = this.props;\n//         return (\n//             <Container fixed>\n//               <Grid container spacing={3}>\n//                 <form className={classes.container} noValidate autoComplete=\"off\">\n//                   <div>\n//                     <TextField\n//                       required\n//                       id=\"title\"\n//                       name=\"title\"\n//                       className={classes.textField}\n//                       style={{width:500}}\n//                       margin=\"normal\"\n//                       onChange={this.changeHandler}\n//                       value={this.state.title}\n//                     />\n//                   </div>\n//                   <div>\n//                     <TextField\n//                       required\n//                       id=\"body\"\n//                       name=\"body\"\n//                       className={classes.textField}\n//                       style={{width:500}}\n//                       margin=\"normal\"\n//                       onChange={this.changeHandler}\n//                       value={this.state.body}\n//                     />\n//                   </div>\n//                   <div>\n//                     <FormControl style={{marginBottom:10}}>\n//                       <InputLabel shrink id=\"label-demi\">\n//                       </InputLabel>\n//                       <Select\n//                         labelId=\"label-demi\"\n//                         id=\"label-demi-id\"\n//                         onChange={this.changeHandler}\n//                         displayEmpty\n//                         name=\"userid\"\n//                         style={{width:500, marginBottom:10}}\n//                         value=\"\"\n//                       >\n//                         {this.state.users.map((item,i) => (\n//                           (item.id===this.state.userid)\n//                           ?\n//                             <MenuItem key={i} value=\"\" selected>{item.name}\n//                             </MenuItem>\n//                           :\n//                             <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\n//                         ))}\n//                       </Select>\n//                     </FormControl>\n//                   </div>\n//                   <Button variant=\"contained\" color=\"primary\" onClick={this.editPost}>\n//                     Submit\n//                   </Button>\n//                 </form>\n//               </Grid>\n//             </Container>\n//         );\n//     }\n// }\n// export default withStyles(styles)(edit)\nimport React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, select, MenuItem } from '@material-ui/core';\nconst styles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 500\n  }\n}));\n\nclass edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.editPost = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(this.state.id), {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          userId: this.state.userid\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset-UTF-8\"\n        }\n      }).then(response => response.json()).then(json => console.log(json));\n    };\n\n    this.state = {\n      items: [],\n      title: '',\n      body: '',\n      userid: 0,\n      users: [],\n      id: this.props.location.id\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(result => {\n      this.setState({\n        users: result,\n        title: result.title,\n        body: result.body,\n        userid: result.userId\n      });\n    }, error => {\n      console.log(error);\n    });\n    fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(this.state.id)).then(res => res.json()).then(result => {\n      this.setState({\n        items: result,\n        title: result.title,\n        body: result.body,\n        userid: result.userId\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"title\",\n      name: \"title\",\n      className: classes.textField,\n      style: {\n        width: 500\n      },\n      margin: \"normal\",\n      onChange: this.changeHandler,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"body\",\n      name: \"body\",\n      className: classes.textField,\n      style: {\n        width: 500\n      },\n      margin: \"normal\",\n      onChange: this.changeHandler,\n      value: this.state.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      shrink: true,\n      id: \"label-demi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      labelId: \"label-demi\",\n      id: \"label-demi-id\",\n      onChange: this.changeHandler,\n      displayEmpty: true,\n      name: \"userid\",\n      style: {\n        width: 500,\n        marginBottom: 10\n      },\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.users.map((item, i) => item.id === this.state.userid ? React.createElement(MenuItem, {\n      key: i,\n      value: \"\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, item.name) : React.createElement(MenuItem, {\n      key: i,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, item.name))))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.editPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default withStyles(styles)(edit);","map":{"version":3,"sources":["/media/swiss/Data/frontend/dilo-teddy/modul1/reactjs/restfullapimaterial/src/components/edit.js"],"names":["React","Component","TextField","withStyles","makeStyles","Grid","Container","Button","FormControl","InputLabel","select","MenuItem","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","edit","constructor","props","changeHandler","event","setState","target","name","value","editPost","fetch","state","id","method","body","JSON","stringify","title","userId","userid","headers","then","response","json","console","log","items","users","location","componentDidMount","res","result","error","render","classes","marginBottom","map","item","i"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkDC,SAAlD,EAA6DC,MAA7D,EAAqEC,WAArE,EAAkFC,UAAlF,EAA8FC,MAA9F,EAAsGC,QAAtG,QAAsH,mBAAtH;AAEA,MAAMC,MAAM,GAAGR,UAAU,CAACS,KAAK,KAAK;AAChCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GADqB;AAKhCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADL;AAEPC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFN;AAGPE,IAAAA,KAAK,EAAE;AAHA;AALqB,CAAL,CAAN,CAAzB;;AAYA,MAAMC,IAAN,SAAmBrB,SAAnB,CAA6B;AACzBsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,aAZmB,GAYFC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAC,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAAnC,OAAd;AACH,KAdkB;;AAAA,SAgBnBC,QAhBmB,GAgBR,MAAM;AAEbC,MAAAA,KAAK,sDAA+C,KAAKC,KAAL,CAAWC,EAA1D,GAAgE;AACjEC,QAAAA,MAAM,EAAE,KADyD;AAEjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KADD;AAEjBH,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAFA;AAGjBI,UAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ;AAHF,SAAf,CAF2D;AAOjEC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAPwD,OAAhE,CAAL,CAWKC,IAXL,CAWUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXtB,EAYKF,IAZL,CAYUE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAZlB;AAcH,KAhCkB;;AAEf,SAAKZ,KAAL,GAAa;AACTe,MAAAA,KAAK,EAAE,EADE;AAETT,MAAAA,KAAK,EAAE,EAFE;AAGTH,MAAAA,IAAI,EAAE,EAHG;AAITK,MAAAA,MAAM,EAAE,CAJC;AAKTQ,MAAAA,KAAK,EAAE,EALE;AAMTf,MAAAA,EAAE,EAAE,KAAKV,KAAL,CAAW0B,QAAX,CAAoBhB;AANf,KAAb;AAQH;;AAwBDiB,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKW,IADL,CACUS,GAAG,IAAIA,GAAG,CAACP,IAAJ,EADjB,EAEKF,IAFL,CAGSU,MAAD,IAAY;AACR,WAAK1B,QAAL,CAAc;AACVsB,QAAAA,KAAK,EAACI,MADI;AAEVd,QAAAA,KAAK,EAACc,MAAM,CAACd,KAFH;AAGVH,QAAAA,IAAI,EAACiB,MAAM,CAACjB,IAHF;AAIVK,QAAAA,MAAM,EAACY,MAAM,CAACb;AAJJ,OAAd;AAMH,KAVT,EAWSc,KAAD,IAAW;AACPR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAbT;AAgBAtB,IAAAA,KAAK,sDAA+C,KAAKC,KAAL,CAAWC,EAA1D,EAAL,CACKS,IADL,CACUS,GAAG,IAAIA,GAAG,CAACP,IAAJ,EADjB,EAEKF,IAFL,CAGSU,MAAD,IAAY;AACR,WAAK1B,QAAL,CAAc;AACVqB,QAAAA,KAAK,EAACK,MADI;AAEVd,QAAAA,KAAK,EAACc,MAAM,CAACd,KAFH;AAGVH,QAAAA,IAAI,EAACiB,MAAM,CAACjB,IAHF;AAIVK,QAAAA,MAAM,EAACY,MAAM,CAACb;AAJJ,OAAd;AAMH,KAVT,EAWSc,KAAD,IAAW;AACPR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,KAbT;AAeH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKhC,KADpB,CACGgC,OADH;AAEL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAEA,OAAO,CAAC1C,SAAzB;AAAoC,MAAA,UAAU,MAA9C;AAA+C,MAAA,YAAY,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,SAAS,EAAE0C,OAAO,CAACvC,SAJvB;AAKI,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,MAAM,EAAC,QANX;AAOI,MAAA,QAAQ,EAAE,KAAKI,aAPnB;AAQI,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWM,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAEiB,OAAO,CAACvC,SAJvB;AAKI,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OALX;AAMI,MAAA,MAAM,EAAC,QANX;AAOI,MAAA,QAAQ,EAAE,KAAKI,aAPnB;AAQI,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,IARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAbJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEqB,QAAAA,YAAY,EAAE;AAAhB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII;AACI,MAAA,OAAO,EAAC,YADZ;AAEI,MAAA,EAAE,EAAC,eAFP;AAGI,MAAA,QAAQ,EAAE,KAAKhC,aAHnB;AAII,MAAA,YAAY,MAJhB;AAKI,MAAA,IAAI,EAAC,QALT;AAMI,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,GAAT;AAAcoC,QAAAA,YAAY,EAAE;AAA5B,OANX;AAOI,MAAA,KAAK,EAAC,EAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASK,KAAKxB,KAAL,CAAWgB,KAAX,CAAiBS,GAAjB,CAAqB,CAACC,IAAD,EAAMC,CAAN,KACjBD,IAAI,CAACzB,EAAL,KAAU,KAAKD,KAAL,CAAWQ,MAAtB,GAEI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEmB,CAAf;AAAkB,MAAA,KAAK,EAAC,EAAxB;AAA2B,MAAA,QAAQ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,IAAI,CAAC9B,IAA1C,CAFJ,GAKI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE+B,CAAf;AAAkB,MAAA,KAAK,EAAED,IAAI,CAACzB,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCyB,IAAI,CAAC9B,IAAxC,CANP,CATL,CAJJ,CADJ,CAzBJ,EAoDI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKE,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDJ,CADJ,CADJ,CADJ;AA8DH;;AArIwB;;AAwI7B,eAAe5B,UAAU,CAACS,MAAD,CAAV,CAAmBU,IAAnB,CAAf","sourcesContent":["// import React,{Component} from 'react';\n// import {TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core/';\n\n// const styles = makeStyles(theme => ({\n//   container: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 500,\n//   },\n// }));\n\n// class edit extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: [],\n//       title:'',\n//       body:'',\n//       userid:0,\n//       users:[],\n//       id:this.props.location.id,\n//     };\n//   }\n\n//   changeHandler = (event) => {\n//     this.setState({[event.target.name]:event.target.value})\n//   }\n\n//   editPost = () => {\n\n//     fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n//       method: 'PUT',\n//       body: JSON.stringify({\n//         title: this.state.title,\n//         body: this.state.body,\n//         userId: this.state.userid\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\"\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(json => console.log(json))\n\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           this.setState({\n//             users: result,\n//             title:result.title,\n//             body:result.body,\n//             userid:result.userId,\n//           });\n//         },\n//         (error) => {\n//           console.log(error)\n//         }\n//       )\n\n//     fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`)\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           this.setState({\n//             items: result,\n//             title:result.title,\n//             body:result.body,\n//             userid:result.userId,\n//           });\n//         },                \n//         (error) => {\n//           console.log(error)   \n//         }\n//       )\n//   }\n\n//     render() {\n//       const {classes} = this.props;\n//         return (\n//             <Container fixed>\n//               <Grid container spacing={3}>\n//                 <form className={classes.container} noValidate autoComplete=\"off\">\n//                   <div>\n//                     <TextField\n//                       required\n//                       id=\"title\"\n//                       name=\"title\"\n//                       className={classes.textField}\n//                       style={{width:500}}\n//                       margin=\"normal\"\n//                       onChange={this.changeHandler}\n//                       value={this.state.title}\n//                     />\n//                   </div>\n//                   <div>\n//                     <TextField\n//                       required\n//                       id=\"body\"\n//                       name=\"body\"\n//                       className={classes.textField}\n//                       style={{width:500}}\n//                       margin=\"normal\"\n//                       onChange={this.changeHandler}\n//                       value={this.state.body}\n//                     />\n//                   </div>\n//                   <div>\n//                     <FormControl style={{marginBottom:10}}>\n//                       <InputLabel shrink id=\"label-demi\">\n                        \n//                       </InputLabel>\n//                       <Select\n//                         labelId=\"label-demi\"\n//                         id=\"label-demi-id\"\n//                         onChange={this.changeHandler}\n//                         displayEmpty\n//                         name=\"userid\"\n//                         style={{width:500, marginBottom:10}}\n//                         value=\"\"\n//                       >\n                        \n//                         {this.state.users.map((item,i) => (\n//                           (item.id===this.state.userid)\n//                           ?\n//                             <MenuItem key={i} value=\"\" selected>{item.name}\n//                             </MenuItem>\n//                           :\n//                             <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\n//                         ))}\n//                       </Select>\n\n                      \n//                     </FormControl>\n//                   </div>\n//                   <Button variant=\"contained\" color=\"primary\" onClick={this.editPost}>\n//                     Submit\n//                   </Button>\n//                 </form>\n//               </Grid>\n\n//             </Container>\n//         );\n//     }\n// }\n\n// export default withStyles(styles)(edit)\n\n\nimport React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, select, MenuItem } from '@material-ui/core'\n\nconst styles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 500,\n    },\n}));\n\nclass edit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            title: '',\n            body: '',\n            userid: 0,\n            users: [],\n            id: this.props.location.id,\n        };\n    }\n\n    changeHandler = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    editPost = () => {\n\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                title: this.state.title,\n                body: this.state.body,\n                userId: this.state.userid\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset-UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => console.log(json))\n\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        users:result,\n                        title:result.title,\n                        body:result.body,\n                        userid:result.userId,\n                    });\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        items:result,\n                        title:result.title,\n                        body:result.body,\n                        userid:result.userId,\n                    });\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container fixed>\n                <Grid container spacing={3}>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <div>\n                            <TextField\n                                required\n                                id=\"title\"\n                                name=\"title\"\n                                className={classes.textField}\n                                style={{ width: 500 }}\n                                margin=\"normal\"\n                                onChange={this.changeHandler}\n                                value={this.state.title}\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                required\n                                id=\"body\"\n                                name=\"body\"\n                                className={classes.textField}\n                                style={{ width: 500 }}\n                                margin=\"normal\"\n                                onChange={this.changeHandler}\n                                value={this.state.body}\n                            />\n                        </div>\n                        <div>\n                            <FormControl style={{ marginBottom: 10 }}>\n                                <InputLabel shrink id=\"label-demi\">\n\n                                </InputLabel>\n                                <select\n                                    labelId=\"label-demi\"\n                                    id=\"label-demi-id\"\n                                    onChange={this.changeHandler}\n                                    displayEmpty\n                                    name=\"userid\"\n                                    style={{ width: 500, marginBottom: 10 }}\n                                    value=\"\"\n                                >\n                                    {this.state.users.map((item,i) => (\n                                        (item.id===this.state.userid)\n                                            ?\n                                            <MenuItem key={i} value=\"\" selected>{item.name}\n                                            </MenuItem>\n                                            :\n                                            <MenuItem key={i} value={item.id}>{item.name}\n                                            </MenuItem>\n                                    ))}\n                                </select>\n\n                            </FormControl>\n                        </div>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.editPost}>\n                            Submit\n                        </Button>\n                    </form>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(styles)(edit)"]},"metadata":{},"sourceType":"module"}