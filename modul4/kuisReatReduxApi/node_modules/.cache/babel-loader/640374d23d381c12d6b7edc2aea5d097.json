{"ast":null,"code":"var _jsxFileName = \"/media/swiss/Data/frontend/dilo-teddy/modul1/reactjs/restfullapimaterial/src/components/add.js\";\nimport React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nconst styles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  TextField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 250\n  },\n  select: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 250\n  }\n}));\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.simpanPost = () => {\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          userId: this.state.userid\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(json => console.log(json));\n    };\n\n    this.state = {\n      items: [],\n      title: '',\n      body: '',\n      userid: 0,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"title\",\n      label: \"Masukan Judul\",\n      name: \"title\",\n      className: classes.TextField,\n      margin: \"normal\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"body\",\n      label: \"Masukan Isi\",\n      name: \"body\",\n      className: classes.TextField,\n      margin: \"normal\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.select,\n      style: {\n        minWidth: 120,\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Pilih User\"), React.createElement(Select, {\n      labelId: \"label\",\n      id: \"select\",\n      name: \"userid\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.users.map((item, i) => React.createElement(MenuItem, {\n      key: i,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, item.name))))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.simpanPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default withStyles(styles)(AddPost);","map":{"version":3,"sources":["/media/swiss/Data/frontend/dilo-teddy/modul1/reactjs/restfullapimaterial/src/components/add.js"],"names":["React","Component","TextField","withStyles","makeStyles","Grid","Container","Button","FormControl","InputLabel","Select","MenuItem","styles","theme","container","display","flexWrap","marginLeft","spacing","marginRight","minWidth","select","AddPost","constructor","props","changeHandler","event","setState","target","name","value","simpanPost","fetch","method","body","JSON","stringify","title","state","userId","userid","headers","then","response","json","console","log","items","users","componentDidMount","res","result","error","render","classes","marginBottom","map","item","i","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, withStyles, makeStyles, Grid, Container, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\nconst styles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    TextField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 250,\n    },\n    select: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 250,\n    }\n}));\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            title: '',\n            body: '',\n            userid: 0,\n            users: []\n        };\n    }\n\n    changeHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    simpanPost = () => {\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: JSON.stringify({\n                title: this.state.title,\n                body: this.state.body,\n                userId: this.state.userid\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => console.log(json))\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        users: result\n                    });\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container fixed>\n                <Grid container spacing={3}>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <div>\n                            <TextField\n                                required\n                                id=\"title\"\n                                label=\"Masukan Judul\"\n                                name=\"title\"\n                                className={classes.TextField}\n                                margin=\"normal\"\n                                onChange={this.changeHandler}\n                            />\n                        </div>\n\n                        <div>\n                            <TextField\n                                required\n                                id=\"body\"\n                                label=\"Masukan Isi\"\n                                name=\"body\"\n                                className={classes.TextField}\n                                margin=\"normal\"\n                                onChange={this.changeHandler}\n                            />\n                        </div>\n\n                        <div>\n                            <FormControl className={classes.select} style={{ minWidth: 120, marginBottom: 10 }}>\n                                <InputLabel id=\"label\">Pilih User</InputLabel>\n                                <Select\n                                    labelId=\"label\"\n                                    id=\"select\"\n                                    name=\"userid\"\n                                    onChange={this.changeHandler}\n                                >\n                                    {this.state.users.map((item, i) => (\n                                        <MenuItem key={i} value={item.id}>{item.name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.simpanPost}>\n                            Submit\n                        </Button>\n                    </form>\n                </Grid>\n            </Container>\n\n        );\n    }\n\n}\n\nexport default withStyles(styles)(AddPost);"]},"metadata":{},"sourceType":"module"}