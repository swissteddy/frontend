{"ast":null,"code":"import { ChangeHandler, SimpanPost, UserData } from './actionType';\nexport function changeHandler(name, value) {\n  return {\n    type: ChangeHandler,\n    name,\n    value\n  };\n}\nexport function simpanPost() {\n  return {\n    type: SimpanPost\n  };\n} //tambahan code untuk redux thunk /middleware\n\nexport const userData = users => {\n  return {\n    type: UserData,\n    users\n  };\n};\nexport const fetchUsers = () => {\n  return dispatch => {\n    fetch('http://dummy.restapiexample.com/api/v1/employees').then(response => response.json()).then(json => {\n      dispatch(userData(json));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};","map":{"version":3,"sources":["/media/swiss/Data/frontend/dilo-teddy/modul4/kuisReatReduxApi/src/store/actions/action.js"],"names":["ChangeHandler","SimpanPost","UserData","changeHandler","name","value","type","simpanPost","userData","users","fetchUsers","dispatch","fetch","then","response","json","catch","error"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,cAAlD;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAmC;AACtC,SAAM;AACFC,IAAAA,IAAI,EAACN,aADH;AAEFI,IAAAA,IAFE;AAGFC,IAAAA;AAHE,GAAN;AAMH;AACD,OAAO,SAASE,UAAT,GAAqB;AACxB,SAAM;AACFD,IAAAA,IAAI,EAACL;AADH,GAAN;AAGH,C,CAED;;AACA,OAAO,MAAMO,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAGJ,QADJ;AAEHO,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACVJ,MAAAA,QAAQ,CAACH,QAAQ,CAACO,IAAD,CAAT,CAAR;AACH,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZ,YAAMA,KAAN;AACH,KAPD;AAQH,GATD;AAUH,CAXM","sourcesContent":["import {ChangeHandler, SimpanPost, UserData} from './actionType'\nexport function changeHandler(name, value){\n    return{\n        type:ChangeHandler,\n        name,\n        value\n\n    };\n}\nexport function simpanPost(){\n    return{\n        type:SimpanPost,\n    };\n}\n\n//tambahan code untuk redux thunk /middleware\nexport const userData = (users) => {\n    return {\n        type : UserData,\n        users\n    }\n};\n\nexport const fetchUsers = () => {\n    return dispatch => {\n        fetch('http://dummy.restapiexample.com/api/v1/employees')\n        .then(response => response.json())\n        .then(json => {\n            dispatch(userData(json))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}